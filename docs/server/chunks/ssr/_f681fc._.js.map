{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/hooks/useMailer.ts"],"sourcesContent":["\"use client\"\n\nimport nodemailer from \"nodemailer\";\nimport React, { useState } from \"react\";\n\ninterface ContactData {\n    email: string;\n    name: string;\n    message: string;\n};\n\nconst transporter = nodemailer.createTransport({\n    host: process.env.NEXT_PUBLIC_SMTP_HOST as string,\n    port: parseInt(process.env.NEXT_PUBLIC_SMTP_PORT as string, 10),\n    secure: true,\n    auth: {\n        user: process.env.NEXT_PUBLIC_SMTP_USER as string,\n        pass: process.env.NEXT_PUBLIC_SMTP_PASSWORD as string,\n    },\n});\n\n\nexport default function useMailer() {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [error, setError] = useState<string | null>(null);\n    const [data, setData] = useState<ContactData>({\n        email: '',\n        name: '',\n        message: '',\n    });\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setData({ ...data, [e.target.name]: e.target.value });\n    };\n\n    const sendEmail = async (template: string) => {\n        setLoading(true);\n        try {\n            await transporter.sendMail({\n                from: process.env.NEXT_PUBLIC_EMAIL_FROM as string,\n                to: process.env.NEXT_PUBLIC_EMAIL_TO as string,\n                subject: 'New Contact Form Submission',\n                html: template\n            });\n        } catch (err) {\n            setError(\"Failed to send the email. Please try again.\");\n            console.log(err);\n        }\n        finally {\n            setLoading(false);\n            setData({\n                email: '',\n                name: '',\n                message: '',\n            });\n        }\n    };\n\n    return {\n        transporter,\n        handleInputChange,\n        sendEmail,\n        loading,\n        error,\n        data,\n    };\n};"],"names":[],"mappings":";;;;;;AAAA;;;AAWA,MAAM,cAAc,uMAAA,CAAA,UAAU,CAAC,eAAe,CAAC;IAC3C,MAAM,QAAQ,GAAG,CAAC,qBAAqB;IACvC,MAAM,SAAS,QAAQ,GAAG,CAAC,qBAAqB,EAAY;IAC5D,QAAQ;IACR,MAAM;QACF,MAAM,QAAQ,GAAG,CAAC,qBAAqB;QACvC,MAAM,QAAQ,GAAG,CAAC,yBAAyB;IAC/C;AACJ;AAGe,SAAS;IACpB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,+UAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,+UAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,+UAAA,CAAA,WAAQ,AAAD,EAAe;QAC1C,OAAO;QACP,MAAM;QACN,SAAS;IACb;IAEA,MAAM,oBAAoB,CAAC;QACvB,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IACvD;IAEA,MAAM,YAAY,OAAO;QACrB,WAAW;QACX,IAAI;YACA,MAAM,YAAY,QAAQ,CAAC;gBACvB,MAAM,QAAQ,GAAG,CAAC,sBAAsB;gBACxC,IAAI,QAAQ,GAAG,CAAC,oBAAoB;gBACpC,SAAS;gBACT,MAAM;YACV;QACJ,EAAE,OAAO,KAAK;YACV,SAAS;YACT,QAAQ,GAAG,CAAC;QAChB,SACQ;YACJ,WAAW;YACX,QAAQ;gBACJ,OAAO;gBACP,MAAM;gBACN,SAAS;YACb;QACJ;IACJ;IAEA,OAAO;QACH;QACA;QACA;QACA;QACA;QACA;IACJ;AACJ"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;;;;;AAGO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/views/components/shared/Button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-semibold transition-colors disabled:pointer-events-none disabled:opacity-50\", {\n  variants: {\n    variant: {\n      default: \"bg-teal-300 text-black hover:bg-teal-900 hover:text-teal-300\",\n      destructive: \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n      outline: \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n      secondary: \"bg-gray-5 shadow-sm hover:bg-black hover:text-white text-white text-balance\",\n      ghost: \"hover:bg-accent hover:text-accent-foreground\",\n      link: \"text-primary underline-offset-4 hover:underline\"\n    },\n    size: {\n      default: \"h-9 px-6 py-4\",\n      sm: \"h-8 rounded-md px-3 text-xs\",\n      lg: \"h-10 rounded-md px-8\",\n      icon: \"h-9 w-9\"\n    }\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"default\"\n  }\n});\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>, VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({ className, variant, size, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\";\n  return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />;\n});\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EAAE,iKAAiK;IAC1L,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAMA,MAAM,uBAAS,gVAAM,UAAU,CAAiC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxH,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAC9B,qBAAO,wXAAC;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QAAK,KAAK;QAAM,GAAG,KAAK;;;;;;AAC/F;AACA,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/views/components/shared/Heading.tsx"],"sourcesContent":["import React from 'react'\n\nexport default function Heading({ text }: { text: string }) {\n\treturn (\n\t\t<h1 className='text-left text-balance text-xl sm:text-2xl lg:text-4xl text-white font-bold inline-block'>\n\t\t\t{text.toUpperCase()}\n\t\t</h1>\n\t)\n}\n"],"names":[],"mappings":";;;;;;AAEe,SAAS,QAAQ,EAAE,IAAI,EAAoB;IACzD,qBACC,wXAAC;QAAG,WAAU;kBACZ,KAAK,WAAW;;;;;;AAGpB"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/views/components/shared/Input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;;;;;;AAOA,MAAM,sBAAQ,gVAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,wXAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/views/components/shared/Textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> { }\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;;;;;;AAOA,MAAM,yBAAW,gVAAM,UAAU,CAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,wXAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,gQACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/template/Email.tsx"],"sourcesContent":["import { Html, Text } from \"@react-email/components\";\n\ninterface EmailProps {\n    email: string;\n    name: string;\n    message: string;\n}\nconst Email: React.FC<EmailProps> = ({ name, email, message }: EmailProps) => {\n    return (\n        <Html lang=\"en\">\n            <Text>Name:{name}</Text>\n            <Text>Contact:{email}</Text>\n            <Text>Message:{message}</Text>\n        </Html>\n    );\n};\n\nexport default Email;"],"names":[],"mappings":";;;;;;;;;AAOA,MAAM,QAA8B,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAc;IACrE,qBACI,wXAAC,sPAAA,CAAA,OAAI;QAAC,MAAK;;0BACP,wXAAC,sPAAA,CAAA,OAAI;;oBAAC;oBAAM;;;;;;;0BACZ,wXAAC,sPAAA,CAAA,OAAI;;oBAAC;oBAAS;;;;;;;0BACf,wXAAC,sPAAA,CAAA,OAAI;;oBAAC;oBAAS;;;;;;;;;;;;;AAG3B;uCAEe"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/views/home/ContactUs.tsx"],"sourcesContent":["\"use client\"\n\nimport { render } from '@react-email/components';\nimport { Button } from '../components/shared/Button';\nimport Heading from '../components/shared/Heading';\nimport { Input } from '../components/shared/Input';\nimport { Textarea } from '../components/shared/Textarea';\nimport Email from '@/template/Email';\nimport useMailer from '@/hooks/useMailer';\n\n\nexport default function ContactUs() {\n\n    const { error, handleInputChange, loading, sendEmail, data } = useMailer();\n\n    const onsubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        const emailContent = await render(<Email {...data} />);\n        await sendEmail(emailContent)\n    };\n\n    return (\n        <section className=\"max-h-max mt-16\" id=\"contact-us\">\n            <div className=\"container flex justify-between  h-full\">\n                <div className=\"border-r border-r-white w-[50%] max-h-full\">\n                    <Heading text='Get In Touch' />\n                    <h3 className=\"w-[80%] text-xl my-3 leading-loose font-semibold\">Got a project in mind? We’d love to hear about it. Take five minutes to fill out our project form.</h3>\n                </div>\n                <div className=\"w-[50%] flex py-5 justify-end\">\n                    <div className=\"w-[80%]\">\n                        <form onSubmit={onsubmit}>\n                            <Input name='email' onChange={handleInputChange} value={data.email} className=\"border-teal-300 h-12 placeholder:text-lg\" placeholder='Email' required aria-required />\n                            <Input name='name' onChange={handleInputChange} value={data.name} className=\"border-teal-300 h-12 placeholder:text-lg mt-4\" placeholder='Name' required aria-required />\n                            <Textarea name='message' onChange={handleInputChange} value={data.message} className=\"border-teal-300 placeholder:text-lg mt-4 text-lg\" placeholder='Name' required aria-required rows={7} />\n                            <Button type='submit' className='w-full mt-4 capitalize text-base font-semibold'>\n                                SUBMIT\n                            </Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;AAWe,SAAS;IAEpB,MAAM,EAAE,KAAK,EAAE,iBAAiB,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD;IAEvE,MAAM,WAAW,OAAO;QACpB,EAAE,cAAc;QAChB,MAAM,eAAe,MAAM,CAAA,GAAA,wTAAA,CAAA,SAAM,AAAD,gBAAE,wXAAC,kHAAA,CAAA,UAAK;YAAE,GAAG,IAAI;;;;;;QACjD,MAAM,UAAU;IACpB;IAEA,qBACI,wXAAC;QAAQ,WAAU;QAAkB,IAAG;kBACpC,cAAA,wXAAC;YAAI,WAAU;;8BACX,wXAAC;oBAAI,WAAU;;sCACX,wXAAC,yIAAA,CAAA,UAAO;4BAAC,MAAK;;;;;;sCACd,wXAAC;4BAAG,WAAU;sCAAmD;;;;;;;;;;;;8BAErE,wXAAC;oBAAI,WAAU;8BACX,cAAA,wXAAC;wBAAI,WAAU;kCACX,cAAA,wXAAC;4BAAK,UAAU;;8CACZ,wXAAC,uIAAA,CAAA,QAAK;oCAAC,MAAK;oCAAQ,UAAU;oCAAmB,OAAO,KAAK,KAAK;oCAAE,WAAU;oCAA2C,aAAY;oCAAQ,QAAQ;oCAAC,eAAa;;;;;;8CACnK,wXAAC,uIAAA,CAAA,QAAK;oCAAC,MAAK;oCAAO,UAAU;oCAAmB,OAAO,KAAK,IAAI;oCAAE,WAAU;oCAAgD,aAAY;oCAAO,QAAQ;oCAAC,eAAa;;;;;;8CACrK,wXAAC,0IAAA,CAAA,WAAQ;oCAAC,MAAK;oCAAU,UAAU;oCAAmB,OAAO,KAAK,OAAO;oCAAE,WAAU;oCAAmD,aAAY;oCAAO,QAAQ;oCAAC,eAAa;oCAAC,MAAM;;;;;;8CACxL,wXAAC,wIAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,WAAU;8CAAiD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS7G"}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}